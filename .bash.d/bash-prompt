# vim:filetype=sh
function __parse_git_branch() {
    local branch stat

    if branch=$( { git symbolic-ref --quiet HEAD || git rev-parse --short HEAD; } 2>/dev/null ); then
        stat="$(__parse_git_dirty)"
        printf "%s" " ${branch##*/}${stat}"
        return
    fi

    return 1
}

function __parse_git_dirty {
    local status dirty untracked ahead newfile renamed deleted bits

    status=`git status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
    ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
    renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
    bits=''
    if [ "${renamed}" == "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="!${bits}"
    fi

    if [ ! "${bits}" == "" ]; then
        printf "%s" " ${bits}"
    fi
}

function __prompt_ps1 {
    local sep=""
    local alt_sep=""

    printf "%s" "${WHITE_BG}${BLACK} \u $(__bg_color 241)${WHITE}${sep}$(__fg_color 248) \w "

    local stat
    if stat=$(__parse_git_branch); then
        printf "%s" "${stat} "
    fi

    printf "%s" "${RESET_BG}$(__fg_color 241)${sep}"
    printf "%s" "${RESET}${RESET_BG}\n"
}

function __prompt {
    PS1="$(__prompt_ps1)"
}

if [[ ! "$PROMPT_COMMAND" == *__prompt* ]]; then
    case $(tty) in
        /dev/tty[0-9]*)
            ;;
        *)
            PROMPT_COMMAND='__prompt;'$'\n'"$PROMPT_COMMAND" ;;
    esac
fi
